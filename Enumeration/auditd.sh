#! /bin/bash

# CIS Red Hat EL 8 Benchmark Section 4

#Configure System Accounting (auditd)
function isEnabled {

    

    if [[ ${#SYSTEMCTL} -gt 0 ]]; then 
        res=$(systemctl is-enabled auditd)
        if [[ "$res" == "enabled" ]]; then
            return true 
        else
            return false
        fi
    elif [[ ${#SERVICE} -gt 0 ]]; then
        res=$($SERVICE auditd status)
        if [[ "$res" == "*is running*" ]]; then
            return true 
        else
            return false
        fi
    else
        echo "Systemctl y Service no esta instalado no puede aplicarse el chekceo swNotDesired"
    fi
}


function  auditConfig {

if [[ isEnabled ]]; then
    size=$(grep "max_log_file" /etc/audit/auditd.conf | awk '{print $3}')
    keep=$(grep "max_log_file_action" /etc/audit/auditd.conf | awk '{print $3}')

    if [[ -z $size ]];then
    auditConfigRes1=("Auditd" true "A" "El parametro max_log_file de auditd esta configurado a $size MB")
    else
    auditConfigRes1=("Auditd" false "A" "El parametro max_log_file de auditd no esta configurado")
    fi

    if [[ -z $keep ]];then
    auditConfigRes2=("Auditd" true "A" "El parametro max_log_file_action de auditd esta configurado en modo keep_logs")
    else
    auditConfigRes2=("Auditd" false "A" "El parametro max_log_file_action de auditd esta configurado en modo $keep y no es adecuado debe ser keep_logs")
    fi

fi

}

#4.1.3-
function  rules {

if [[ isEnabled ]]; then
    time=$(grep "time-change" /etc/audit/rules.d/audit.rules)
    identity=$(grep "identity" /etc/audit/rules.d/audit.rules)
    network=$(grep "system-locale" /etc/audit/rules.d/audit.rules)
    MAC=$(grep "MAC-policy" /etc/audit/rules.d/audit.rules)
    login=$(grep "login" /etc/audit/rules.d/audit.rules)
    sudo=$(grep "sudo.log" /etc/audit/rules.d/audit.rules)
    session=$(grep "session" /etc/audit/rules.d/audit.rules)
    filepermission=$(grep "perm_mod" /etc/audit/rules.d/audit.rules)
    access=$(grep "access" /etc/audit/rules.d/audit.rules)
    mounts=$(grep "mounts" /etc/audit/rules.d/audit.rules)
    delete=$(grep "delete" /etc/audit/rules.d/audit.rules)
    scope=$(grep "scope" /etc/audit/rules.d/audit.rules)
    actions=$(grep "scope" /etc/audit/rules.d/audit.rules)
    modules=$(grep "modules" /etc/audit/rules.d/audit.rules)
    immutable=$(grep "^\s*[^#]" /etc/audit/rules.d/audit.rules | tail -1)


    if [[ -z $time ]];then
    auditrulesRes1=("Auditd Rules" false "A" "Se debe configurar reglas para capturar eventos cuando la fecha y hora se modifica")
    else
    auditrulesRes1=("Auditd Rules" true "A" "Reglas para capturar eventos cuando la fecha y hora se modifica")    
    fi

    if [[ -z $identity ]];then
    auditrulesRes2=("Auditd Rules" false "A" "Se debe configurar reglas para capturar eventos cuando se modifican los ficheros group, passwd, shadow, gshadow y opasswd")
    else
    auditrulesRes2=("Auditd Rules" true "A" "Los ficheros group, passwd, shadow, gshadow y opasswd están monitorizados")
    fi

    if [[ -z $network ]];then
    auditrulesRes3=("Auditd Rules" false "A" "Se debe configurar reglas para capturar eventos cuando se modifican ficheros de redes o llamadas al sistema que implica usar librerias de netoworking")
    else
    auditrulesRes3=("Auditd Rules" true "A" "El uso de llamadas a APIs de networking o ficheros de configuracion de red estan monitorizados")
    fi

    if [[ -z $MAC ]];then
    auditrulesRes4=("Auditd Rules" false "A" "Se debe configurar reglas para capturar eventos cuando un usuario no autorizado intenta cambiar contextos de seguridad o los controles MAC")
    else
    auditrulesRes4=("Auditd Rules" true "A" "Cambios en los contextos de seguridad por usuarios no autorizados estan monitorizados")    
    fi

    if [[ -z $login ]];then
    auditrulesRes5=("Auditd Rules" false "A" "Se debe configurar reglas para capturar eventos cuando se producen intentos fallidos de autenticacion")
    else
    auditrulesRes5=("Auditd Rules" true "A" "Todos los fallos de autenticacion estan monitorizados")    
    fi

    if [[ -z $session ]];then
    auditrulesRes6=("Auditd Rules" false "A" "Se debe configurar reglas para capturar eventos cuando se producen modificaciones en los ficheros que gestionan las sesiones")
    else
    auditrulesRes6=("Auditd Rules" true "A" "Los ficheros usados para gestionar las sesoines de los usuarios estan monitorizados")    
    fi

    if [[ -z $filepermission ]];then
    echo "Se debe configurar reglas para capturar eventos cuando se cambien los permisos de los ficheros"
    auditrulesRes7=("Auditd Rules" false "A" "Se debe configurar reglas para capturar eventos cuando se cambien los permisos de los ficheros")
    else
    auditrulesRes7=("Auditd Rules" true "A" "los cambios de permisos en los ficheros estan monitorizados")    
    fi

    if [[ -z $access ]];then
    auditrulesRes8=("Auditd Rules" false "A" "Se debe configurar reglas para capturar eventos cuando se intente acceder a ficheros sin exito")
    else
    auditrulesRes8=("Auditd Rules" true "A" "Acceso a ficheros no autorizados esta monitorizado")    
    fi

    if [[ -z $mounts ]];then
    auditrulesRes9=("Auditd Rules" false "A" "Se debe configurar reglas para capturar eventos cuando se use el comando mount")
    else
    auditrulesRes9=("Auditd Rules" false "A" "El uso del comando mount esta monitorizado")    
    fi

    if [[ -z $delete ]];then
    auditrulesRes10=("Auditd Rules" false "A" "Se debe configurar reglas para capturar eventos cuando se borren ficheros")
    else
    auditrulesRes10=("Auditd Rules" true "A" "El borrado de ficheros esta monitorizado")    
    fi

    if [[ -z $scope ]];then
    auditrulesRes11=("Auditd Rules" false "A" "Se debe configurar reglas para capturar eventos cuando se use sudo desde el administrador del sistema")
    else
    auditrulesRes11=("Auditd Rules" true "A" "El uso de sudo esta monitorizado")    
    fi

    if [[ -z $actions ]];then
    auditrulesRes12=("Auditd Rules" false "A" "Se debe configurar reglas para capturar eventos cuando se use sudo desde el administrador del sistema")
    else
    auditrulesRes12=("Auditd Rules" true "A" "El uso de sudo esta monitorizado")    
    fi

    if [[ -z $modules ]];then
    echo "Se debe configurar reglas para capturar eventos cuando se añadan o eliminen modulos del sistema"
    auditrulesRes13=("Auditd Rules" false "A" "Se debe configurar reglas para capturar eventos cuando se añadan o eliminen modulos del sistema")
    else
    auditrulesRes13=("Auditd Rules" true "A" "Añadir o modificar modulos en el sistema está monitorizado")    
    fi

    if [[ -z $sudo ]];then
    auditrulesRes14=("Auditd Rules" false "A" "Se debe configurar reglas para capturar eventos cuando se ejecuten acciones como sudo")
    else
    auditrulesRes14=("Auditd Rules" true "A" "Las acciones realizadas como sudo están monitorizadas")    
    fi

    if [[ -z $immutable ]];then
    echo "Se debe configurar bloquear la modificacion de las reglas de audit. Se espera -e 2 al final del fichero audit.rules"
    auditrulesRes15=("Auditd Rules" true "A" "Se debe configurar bloquear la modificacion de las reglas de audit. Se espera -e 2 al final del fichero audit.rules")
    fi
fi

}