#! /bin/bash
source "/root/audit/binaries_location.sh"

#3.4.2.1
function firewalldEnabled {


if [[ ${#FIREWALL_CMD} -eq 0 ]]; then
firewalldEnabledRest=("Firewalld enabled" true "N/A" "Firewalld no installed")
else
    firewallStatus=$($FIREWALL_CMD --state)
    if [[ $firewallStatus != "running" ]]; then
    firewalldEnabledRest=("Firewalld enabled" false "A" "Firewalld not running")
    else
    firewalldEnabledRest=("Firewalld enabled" true "A" "Firewalld running")
    fi
fi

}

#3.4.2.6
function firewalldRules {

if [[ ${#FIREWALL_CMD} -eq 0 ]]; then
firewalldEnabledRest=("Firewalld rules" true "N/A" "Firewalld no installed")
else
    firewallStatus=$($FIREWALL_CMD --state)
    if [[ $firewallStatus == "running" ]]; then
        firewall-cmd --get-active-zones | awk '!/:/ {print $1}' > ../firewald-rules.txt
    fi
fi

}


#3.4.2.2
function iptablesEnabled {


if [[ $SYSTEMCTL ]]; then 
    iptablesStatus=$($SYSTEMCTL is-enabled iptables)
    
    if [[ $iptablesStatus == "*iptables.service*" ]]; then 
        iptablesEnabledRest=("IPTABLES enabled" false "A" "IPTABLES no esta instalado como servicio. yum install iptables-services")
    elif [[  $iptablesStatus != "enabled" ]]; then
        iptablesEnabledRest=("IPTABLES enabled" false "A" "IPTABLES not running")
    else
        iptablesEnabledRest=("IPTABLES enabled" true "A" "IPTABLES running")
    fi
elif [[ $SERVICE ]]; then
    iptablesStatus=$($SERVICE iptables status)
    
    if [[ $iptablesStatus == "*not running*" ]]; then 
        iptablesEnabledRest=("IPTABLES enabled" false "A" "IPTABLES no esta activo o instalado como servicio. yum install iptables-services")
    else
        iptablesEnabledRest=("IPTABLES enabled" true "A" "IPTABLES running")
    fi
else
        echo "Systemctl y Service no esta instalado no puede aplicarse el chekceo swNotDesired"
fi

}

#IPTABLES
function iptablesRulesDef {

if [[ $(iptables -L | grep "(policy DROP)" | wc -l) -eq 3 || $(iptables -L | grep "(policy REJECT)" | wc -l) -eq 3 ]];then
    iptablesRulesDefRes=("IPTABLES" true "A" "IPTABLES default policy is DROP or REJECT for INPUT, OUTPUT and FORWARD")
else
    iptablesRulesDefRes=("IPTABLES" false "A" "IPTABLES default policy is not DROP or REJECT for INPUT, OUTPUT and FORWARD")
fi

}




#NF TABLES
function nftablesEnabled {

if [[ $SYSTEMCTL == "no $SYSTEMCTL*" ]]; then
    echo "systemctl no est√° instalado"
else
    nftablesStatus=$($SYSTEMCTL is-enabled nftables)
fi

if [[ $nftablesStatus == "enabled" ]]; then 
    nftablesEnabledRest=("NF TABLES" false "A" "NFTABLES esta instalado como servicio")
elif [[  $nftablesStatus == "disabled" ]]; then
    nftablesEnabledRest=("NF TABLES" true "A" "NFTABLES disabled")
fi
}
