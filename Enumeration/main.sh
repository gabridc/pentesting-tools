#!/bin/bash

source ./colors.sh
source ./SuidFileVulnerables.sh
source ./SudoFileVulnerables.sh


function help (){
    echo -e "${greenColour} Command execution example: ./main.sh <function> <function> <parameters> ${endColour}"
    echo -e "${yellowColour}        ./main.sh 'suid sudo'${endColour}"

    echo -e "${greenColour} Functions${endColour}"
    echo -e "${yellowColour}        [sudo] ${blueColour} Get sudo permission to the current user. \n                If the user has permission as sudo for some binaries check in GTFOBins if some is vulnerable${endColour}"
    echo -e "${yellowColour}        [suid] ${blueColour} Get file with suid permissions. \n                If the file has suid permission check in GTFOBins if some is vulnerable${endColour}"
    echo -e "${yellowColour}        [binaries] ${blueColour} Get binaries in system PATHS. \n${endColour}"

    echo -e "${greenColour} Parameters${endColour}"
    echo -e "${yellowColour}        [-h] ${blueColour} Help Information\n${endColour}"
    echo -e "${yellowColour}        [-o] ${blueColour} Export result to file\n\n${endColour}"

}


function main {


if [[ $1 = *'suid'* ]]
then
suid
fi

if [[ $1 = *'sudo'* ]]
then
sudoers
fi

exit 0
}

if [[ $1 ]]
then

while getopts 'c:o:h' flag; do
    case "${flag}" in
        c) main "${OPTARG}" ;;
        o) echo "${OPTARG}" ;;
        *) help
        exit 1 ;;
    esac
done
else
 help
fi





