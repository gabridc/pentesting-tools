#!/bin/bash

#Network Configuration
function netipv4 {
forward=$(cat /proc/sys/net/ipv4/ip_forward)
redirectAll=$(cat /proc/sys/net/ipv4/conf/all/send_redirects)
redirectDef=$(cat /proc/sys/net/ipv4/conf/default/send_redirects)


if [[ $forward != "0" ]]; then 
netipv4Rest1=("Network Configuration" false "A" "No esta permitido el formwading de paquetes. Solucion: echo 0 > /proc/sys/net/ipv4/ip_formward")
else
netipv4Rest1=("Network Configuration" true "A" "El formwading de paquetes est치 bloqueado.")
fi 

if [[ $redirectAll != "0" ]]; then 
netipv4Rest2=("Network Configuration" false "A" "No esta permitido el reenvio de paquetes de rutas a traves de ICMP en todas las interfaces. Solucion: echo 0 > /proc/sys/net/ipv4/conf/all/send_redirects")
else
netipv4Rest2=("Network Configuration" true "A" "El reenvio de paquetes de rutas a traves de ICMP en todas las interfaces est치 bloqueado.")
fi 

if [[ $redirectDef != "0" ]]; then 
netipv4Rest3=("Network Configuration" false "A" "No esta permitido el reenvio de paquetes de rutas a traves de ICMP en las interfaces por defecto. Solucion: echo 0 > /proc/sys/net/ipv4/conf/default/send_redirects")
else
netipv4Rest3=("Network Configuration" true "A" "El reenvio de paquetes de rutas a traves de ICMP en las interfaces por defecto esta bloqueado.")
fi 

if [[ $redirectAll != "0" ]]; then 
netipv4Rest4=("Network Configuration" false "A" "No esta permitido las opciones de seleccion de rutas SSR y LSR en todas las interfaces. Solucion: echo 0 > /proc/sys/net/ipv4/conf/all/accept_source_route")
else
netipv4Rest4=("Network Configuration" true "A" "Las opciones de seleccion de rutas SSR y LSR en todas las interfaces esta bloqueado")
fi 

sourceAll=$(cat /proc/sys/net/ipv4/conf/all/accept_source_route)
sourceDef=$(cat /proc/sys/net/ipv4/conf/default/accept_source_route)

if [[ $sourceDef != "0" ]]; then 
netipv4Rest5=("Network Configuration" false "A" "No esta permitido las opciones de seleccion de rutas SSR y LSR en las interfaces por defecto. Solucion: echo 0 > /proc/sys/net/ipv4/conf/default/accept_source_route")
else
netipv4Rest5=("Network Configuration" true "A" "Las opciones de seleccion de rutas SSR y LSR en las interfaces por defecto est치 bloqueado")
fi 

if [[ $sourceAll != "0" ]]; then 
netipv4Rest6=("Network Configuration" false "A" "No esta permitido las opciones de seleccion de rutas SSR y LSR. Solucion: echo 0 > /proc/sys/net/ipv4/conf/all/accept_source_route")
else
netipv4Rest6=("Network Configuration" true "A" "Las opciones de seleccion de rutas SSR y LSR esta bloqueado.")
fi 

icmpAll=$(cat /proc/sys/net/ipv4/conf/all/secure_redirects)
icmpDef=$(cat /proc/sys/net/ipv4/conf/default/secure_redirects)

if [[ $icmpAll != "0" ]]; then 
netipv4Rest7=("Network Configuration" false "A" "No esta permitido el reenvio de paquetes ICMP en todas las interfaces. Solucion: echo 0 > /proc/sys/net/ipv4/conf/all/secure_redirects")
else
netipv4Rest7=("Network Configuration" true "A" "El reenvio de paquetes ICMP en todas las interfaces est치 bloqueado")
fi 

if [[ $icmpDef != "0" ]]; then 
netipv4Rest8=("Network Configuration" false "A" "No esta permitido el reenvio de paquetes ICMP en las interfaces por defecto. Solucion: echo 0 > /proc/sys/net/ipv4/conf/default/accept_source_route")
else
netipv4Rest8=("Network Configuration" true "A" "El reenvio de paquetes ICMP en las interfaces por defecto esta bloqeuado")
fi 

logAll=$(cat /proc/sys/net/ipv4/conf/all/log_martians)
logDef=$(cat /proc/sys/net/ipv4/conf/default/log_martians)

if [[ $logAll != "1" ]]; then 
netipv4Rest9=("Network Configuration" false "A" "Debe registrarse la recepcion de paquetes con direcciones origen no alcanazables como sospechoso en todas las interfaces. Solucion: echo 1 > /proc/sys/net/ipv4/conf/all/log_martians")
else
netipv4Rest9=("Network Configuration" true "A" "La recepcion de paquetes con direcciones origen no alcanazables como sospechoso en todas las interfaces esta bloqueado")
fi 

if [[ $logDef != "1" ]]; then 
netipv4Rest10=("Network Configuration" false "A" "Debe registrarse la recepcion de paquetes con direcciones origen no alcanazables como sospechoso en las interfaces por defecto. Solucion: echo 1 > /proc/sys/net/ipv4/conf/default/log_martians")
else
netipv4Rest10=("Network Configuration" true "A" "La recepcion de paquetes con direcciones origen no alcanazables como sospechoso en las interfaces por defecto esta bloqueado")
fi 


icmpBrod=$(cat /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts)
icmpBogus=$(cat /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses)

if [[ $icmpBrod != "1" ]]; then 
netipv4Rest11=("Network Configuration" false "A" "No debe aceptarse los paquetes ICMP de tipo broadcast. Solucion: echo 1 > /proc/sys/net/icmp_echo_ignore_broadcasts")
else
netipv4Rest11=("Network Configuration" true "A" "Los paquetes ICMP de tipo broadcast esta bloqueado")
fi 

if [[ $icmpBogus != "1" ]]; then 
netipv4Rest12=("Network Configuration" false "A" "No debe aceptarse los paquetes ICMP logging bogus responses. Solucion: echo 1 > /proc/sys/net/icmp_ignore_bogus_error_responses")
else
netipv4Rest12=("Network Configuration" true "A" "Los paquetes ICMP logging bogus responses esta bloqueado")
fi 

revPathFiltAll=$(cat /proc/sys/net/ipv4/conf/all/rp_filter)
revPathFiltDef=$(cat /proc/sys/net/ipv4/conf/default/rp_filter)

if [[ $revPathFiltAll != "1" ]]; then 
netipv4Rest13=("Network Configuration" false "A" "Deben validarse la direccion IP origen y el puerto por el que se recibe el paquete en todas las interfaces. Solucion: echo 1 > /proc/sys/net/ipv4/conf/all/rp_filter")
else
netipv4Rest13=("Network Configuration" true "A" "La direccion IP origen y el puerto por el que se recibe el paquete en todas las interfaces esta bloqueado")
fi 

if [[ $revPathFiltDef != "1" ]]; then 
netipv4Rest14=("Network Configuration" false "A" "Deben validarse la direccion IP origen y el puerto por el que se recibe el paquete en la interfaz por defecto. Solucion: echo 1 > /proc/sys/net/ipv4/conf/default/rp_filter")
else
netipv4Rest14=("Network Configuration" true "A" "La direccion IP origen y el puerto por el que se recibe el paquete en la interfaz por defecto esta bloqueado")
fi 

synCookie=$(cat /proc/sys/net/ipv4/tcp_syncookies)

if [[ $synCookie != "1" ]]; then 
netipv4Rest15=("Network Configuration" false "A" "Debe activarse el uso de SYN Cookies para evitar ataques de DDos. Solucion: echo 1 > /proc/sys/net//ipv4/tcp_syncookies")
else
netipv4Rest15=("Network Configuration" true "A" "El uso de SYN Cookies para evitar ataques de DDos esta bloqueado")
fi 

}

#Network Configuration
function netipv6 {
ipv6All=$(cat /proc/sys/net/ipv6/conf/all/disable_ipv6)
ipv6Def=$(cat /proc/sys/net/ipv6/conf/default/disable_ipv6)

if [[ $ipv6All -ne "1" ]]; then 
echo "Debe deshabilitar IPV6 en todas las interfaces"
echo "Solucion: echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6"
fi 

if [[ $ipv6Def -ne "1" ]]; then 
echo "Debe deshabilitar IPV6 en las interfaces por defecto"
echo "Solucion: echo 1 > /proc/sys/net/ipv6/conf/default/disable_ipv6"
fi 

ipv6raAll=$(cat /proc/sys/net/ipv6/conf/all/accept_ra)
ipv6raDef=$(cat /proc/sys/net/ipv6/conf/default/accept_ra)

if [[ $ipv6raAll -ne "0" ]]; then 
echo "Debe deshabilitar IPV6 router advertisement en todas las interfaces"
echo "Solucion: echo 0 > /proc/sys/net/ipv6/conf/all/accept_ra"
fi 

if [[ $ipv6raeth0 -ne "0" ]]; then 
echo "Debe deshabilitar IPV6 router advertisement en las interfaces por defecto"
echo "Solucion: echo 0 > /proc/sys/net/ipv6/conf/default/accept_ra"
fi 

ipv6reAll=$(cat /proc/sys/net/ipv6/conf/all/accept_redirects)
ipv6reDef=$(cat /proc/sys/net/ipv6/conf/default/accept_redirects)

if [[ $ipv6reAll -ne "0" ]]; then 
echo "Debe deshabilitar la redireccion de mensajes ICMP en todas las interfaces"
echo "Solucion: echo 0 > /proc/sys/net/ipv6/conf/all/accept_redirects"
fi 

if [[ $ipv6reDef -ne "0" ]]; then 
echo "Debe deshabilitar la redireccion de mensajes ICMP en las interfaces por defecto"
echo "Solucion: echo 0 > /proc/sys/net/ipv6/conf/default/accept_redirects"
fi 

}

#TCP Wrappers
function tcpWrapper {
hostsAllow=$(cat /etc/hosts.allow | grep 'ALL:.*[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*.*' | grep -v '#')

#Si no hay hosts permitidos, debe configurarse para solo permitir trafico procedente de hosts concretos
if [[ -z $hostsAllow ]]; then
tcpWrapperRest1=("TCP Wrappers" false "A" "No hay filtrado de hosts usando el fichero /etc/hosts.allow")
else
tcpWrapperRest1=("TCP Wrappers" true "A" "Hay filtrado de hosts usando el fichero /etc/hosts.allow")
fi 

hostsDeny=$(cat /etc/hosts.deny | grep 'ALL:ALL\|ALL: ALL' | grep -v '#')

#Debe configurarse para que no permita ningun hosts
if [[ -z $hostsDeny ]]; then
tcpWrapperRest2=("TCP Wrappers" false "A" "No hay filtrado de hosts usando el fichero /etc/hosts.deny. Solucion: echo \"ALL:ALL\" >> /etc/hosts.deny")
else
tcpWrapperRest2=("TCP Wrappers" true "A" "Hay filtrado de hosts usando el fichero /etc/hosts.deny. Solucion: echo \"ALL:ALL\" >> /etc/hosts.deny")
fi 

permissionAllow=$(stat /etc/hosts.allow | grep 0644)
userAllow=$(ls -l /etc/hosts.allow| awk '{print $3}')
groupAllow=$(ls -l /etc/hosts.allow | awk '{print $4}')
permissionDeny=$(stat /etc/hosts.deny | grep 0644)
userDeny=$(ls -l /etc/hosts.deny | awk '{print $3}')
groupDeny=$(ls -l /etc/hosts.deny | awk '{print $4}')

if [[ -z $permissionAllow ]]; then
permisos=$(stat /etc/hosts.allow)
tcpWrapperRest3=("TCP Wrappers" false "A" "Los permisos del fichero /etc/hosts.allow no son 0644 $permisos")
else
permisos=$(stat /etc/hosts.deny)
tcpWrapperRest3=("TCP Wrappers" true "A" "Los permisos del fichero /etc/hosts.allow son 0644 $permisos")
fi 

if [[ "$userAllow" != "root" ]]; then
permisos=$(stat /etc/hosts.allow)
tcpWrapperRest4=("TCP Wrappers" false "A" "El fichero /etc/hosts.allow no esta asignado al usuario root $permisos")
else
permisos=$(stat /etc/hosts.deny)
tcpWrapperRest4=("TCP Wrappers" true "A" "El fichero /etc/hosts.allow esta asignado al usuario root $permisos")
fi

if [[ "$groupAllow" != "root" ]]; then
permisos=$(stat /etc/hosts.allow)
tcpWrapperRest5=("TCP Wrappers" false "A" "El fichero /etc/hosts.allow no esta asignado al grupo root $permisos")
else
permisos=$(stat /etc/hosts.deny)
tcpWrapperRest5=("TCP Wrappers" true "A" "El fichero /etc/hosts.allow esta asignado al grupo root $permisos")
fi

if [[ -z $permissionDeny ]]; then
permisos=$(stat /etc/hosts.deny)
tcpWrapperRest6=("TCP Wrappers" false "A" "Los permisos del fichero /etc/hosts.deny no son 0644 $permisos")
else
permisos=$(stat /etc/hosts.deny)
tcpWrapperRest6=("TCP Wrappers" true "A" "Los permisos del fichero /etc/hosts.deny son 0644 $permisos")
fi 

if [[ "$userDeny" != "root" ]]; then
permisos=$(stat /etc/hosts.deny)
tcpWrapperRest7=("TCP Wrappers" false "A" "El fichero /etc/hosts.deny no esta asignado al usuario root $permisos")
else
permisos=$(stat /etc/hosts.deny)
tcpWrapperRest7=("TCP Wrappers" true "A" "El fichero /etc/hosts.deny esta asignado al usuario root $permisos")
fi

if [[ "$groupDeny" != "root" ]]; then
permisos=$(stat /etc/hosts.deny)
tcpWrapperRest8=("TCP Wrappers" false "A" "El fichero /etc/hosts.deny no esta asignado al grupo root $permisos")
else
permisos=$(stat /etc/hosts.deny)
tcpWrapperRest8=("TCP Wrappers" true "A" "El fichero /etc/hosts.deny esta asignado al grupo root $permisos")
fi

}

#Uncommon Network Protocols
function unComNetProto {
dccp=$(cat /etc/modprobe.d/CIS.conf | grep "install dccp /bin/true")
sctp=$(cat /etc/modprobe.d/CIS.conf | grep "install sctp /bin/true")
rds=$(cat /etc/modprobe.d/CIS.conf | grep "install rds /bin/true")
tipc=$(cat /etc/modprobe.d/CIS.conf | grep "install tipc /bin/true")


if [[ -z $dccp ]]; then
unComNetProtoRest1=("Uncommon Network Protocols" false "A" "El demonio DCCP debe bloquearse. Soluci칩n: echo install dccp /bin/true >> /etc/modprobe.d/CIS.conf")
fi 

if [[ -z $sctp ]]; then
unComNetProtoRest2=("Uncommon Network Protocols" false "A" "El demonio SCTP debe bloquearse. Soluci칩n: echo install sctp /bin/true >> /etc/modprobe.d/CIS.conf")
fi 

if [[ -z $rds ]]; then
unComNetProtoRest3=("Uncommon Network Protocols" false "A" "El demonio RDS debe bloquearse. Soluci칩n: echo install rds /bin/true >> /etc/modprobe.d/CIS.conf")
fi 

if [[ -z $tipc ]]; then
unComNetProtoRest4=("Uncommon Network Protocols" false "A" "El demonio TIPC debe bloquearse. Soluci칩n: echo install tipc /bin/true >> /etc/modprobe.d/CIS.conf")
fi 

}


